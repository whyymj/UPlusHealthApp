{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.esm.js","webpack:///./node_modules/object-assign/index.js","webpack:///./src/components/test.vue","webpack:///./src/components/test.vue?127b","webpack:///./src/components/test.vue?89d5","webpack:///./node_modules/tesseract.js/package.json","webpack:///./node_modules/tesseract.js/src/index.js","webpack:///./node_modules/tesseract.js/src/common/circularize.js","webpack:///./node_modules/tesseract.js/src/browser/index.js","webpack:///./node_modules/tesseract.js/src/common/job.js","webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js"],"names":["Object","defineProperty","__webpack_exports__","value","IN_BROWSER","window","WINDOW","CLASS_HIDDEN","NAMESPACE","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","aspectRatio","NaN","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","toConsumableArray","arr","Array","isArray","arr2","from","isNaN","Number","isNumber","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","call","e","isFunction","forEach","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","getOrientation","arrayBuffer","dataView","DataView","orientation","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","pointers","action","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","concat","map","param","floor","getSourceCanvas","_getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","done","ontimeout","onabort","onerror","onload","response","open","responseType","withCredentials","send","mimeType","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","onStart","onStop","complete","timeout","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","abort","clearTimeout","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","module","exports","test1","getOwnPropertyNames","test2","test3","letter","err","shouldUseNative","symbols","to","val","toObject","s","components_test","_alert","alert","_x","toString","imgSrc","cropImg","id","created","onkeydown","console","log","mounted","setImage","file","files","includes","FileReader","reader","result","$refs","$el","readAsDataURL","cropImage","recognize","src_default","lang","tessedit_char_whitelist","tessedit_char_blacklist","tessedit_dump_choices","then","uploadImage","getElementById","trigger","click","readURL","input","selectortype_template_index_0_src_components_test","_vm","_h","$createElement","_c","_self","_l","index","staticStyle","background-color","display","on","keyup","$event","_k","keyCode","button","_v","_s","_m","staticRenderFns","staticClass","attrs","Component","__webpack_require__","normalizeComponent","ssrContext","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","browser","./src/node/index.js","bugs","bundleDependencies","dependencies","file-type","is-url","jpeg-js","level-js","node-fetch","object-assign","png.js","tesseract.js-core","deprecated","description","devDependencies","babel-preset-es2015","babelify","browserify","envify","http-server","pako","watchify","homepage","license","main","repository","scripts","release","version","adapter","circularize","TesseractJob","objectAssign","TesseractWorker","[object Object]","workerOptions","worker","_currentJob","_queue","_delay","job","_send","terminateWorker","fn","spawnWorker","shift","_dequeue","packet","status","jobId","_handle","warn","DefaultTesseract","create","defaultOptions","page","paragraphs","lines","words","blocks","block","para","line","paragraph","word","sym","corePath","langPath","workerPath","Blob","URL","blob","Worker","createObjectURL","onmessage","_recv","terminate","sendPacket","loadImage","cb","im","Image","debug","File","fr","c","videoWidth","videoHeight","ctx","payload","postMessage","jobCounter","random","slice","_instance","_resolve","_reject","_progress","_finally","resolve","reject","catch","runFinallyCbs","ret","error","_vue2","_interopRequireDefault","_cropperjs2","__esModule","default","CropperComponent","extend","h","containerStyle","ref","alt","imgStyle","Boolean","Function","_$options$props","$options","_objectWithoutProperties","onlyColorChanged","relativeZoom","VueCropper","component"],"mappings":"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","file":"static/js/2.1270c34a9a9d28607b31.js","sourcesContent":["/*!\n * Cropper.js v1.3.4\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2018 Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-03-31T06:49:16.394Z\n */\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper';\n\n// Actions\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nvar CLASS_CROP = NAMESPACE + '-crop';\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\nvar CLASS_HIDE = NAMESPACE + '-hide';\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\nvar CLASS_MODAL = NAMESPACE + '-modal';\nvar CLASS_MOVE = NAMESPACE + '-move';\n\n// Data keys\nvar DATA_ACTION = 'action';\nvar DATA_PREVIEW = 'preview';\n\n// Drag modes\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none';\n\n// Events\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_LOAD = 'load';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom';\n\n// RegExps\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * Check if the given value is not a number.\n */\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n\n        var i = void 0;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nvar REGEXP_SPACES = /\\s\\s*/;\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n    var listener = function listener() {};\n    var options = Object.defineProperty({}, 'once', {\n      get: function get$$1() {\n        supported = true;\n        return once;\n      },\n\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set$$1(value) {\n        once = value;\n      }\n    });\n\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var _handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === undefined ? {} : _element$listeners;\n\n\n      _handler = function handler() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nfunction dispatchEvent(element, type, data) {\n  var event = void 0;\n\n  // Event and CustomEvent on IE9-11 are global objects, not constructors\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\n\nvar location = WINDOW.location;\n\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n  // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  forEach(uint8, function (value) {\n    data += fromCharCode(value);\n  });\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio;\n\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n\n    forEach(previews, function (el) {\n      var img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData = void 0;\n      var cropBoxData = void 0;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        assign(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n\n    if (!getData(element, NAMESPACE)) {\n      return this;\n    }\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _canvasData = this.canvasData,\n        left = _canvasData.left,\n        top = _canvasData.top;\n\n\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n\n    var changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n\n\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n\n    var transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      forEach(data, function (n, i) {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _getData = this.getData(),\n        initialX = _getData.x,\n        initialY = _getData.y,\n        initialWidth = _getData.width,\n        initialHeight = _getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var sourceWidth = source.width;\n    var sourceHeight = source.height;\n\n    // Source canvas parameters\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth = void 0;\n    var srcHeight = void 0;\n\n    // Destination canvas parameters\n    var dstX = void 0;\n    var dstY = void 0;\n    var dstWidth = void 0;\n    var dstHeight = void 0;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var element = this.element;\n\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData(element, NAMESPACE)) {\n        return;\n      }\n\n      setData(element, NAMESPACE, this);\n\n      if (tagName === 'img') {\n        this.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url;\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n\n      var element = this.element,\n          options = this.options;\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      this.reloading = true;\n      this.xhr = xhr;\n\n      var done = function done() {\n        _this.reloading = false;\n        _this.xhr = null;\n      };\n\n      xhr.ontimeout = done;\n      xhr.onabort = done;\n      xhr.onerror = function () {\n        done();\n        _this.clone();\n      };\n\n      xhr.onload = function () {\n        done();\n        _this.read(xhr.response);\n      };\n\n      // Bust cache when there is a \"crossOrigin\" property\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n\n      var orientation = getOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n\n      var start = this.start.bind(this);\n      var stop = this.stop.bind(this);\n\n      this.image = image;\n      this.onStart = start;\n      this.onStop = stop;\n\n      if (this.isImg) {\n        if (element.complete) {\n          // start asynchronously to keep `this.cropper` is accessible in `ready` event handler.\n          this.timeout = setTimeout(start, 0);\n        } else {\n          addListener(element, EVENT_LOAD, start, {\n            once: true\n          });\n        }\n      } else {\n        image.onload = start;\n        image.onerror = stop;\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(event) {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n\n      if (event) {\n        image.onload = null;\n        image.onerror = null;\n      }\n\n      this.sizing = true;\n\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n        _this2.build();\n      };\n\n      // Modern browsers (except Safari)\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src;\n\n      // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var image = this.image;\n\n\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image;\n\n      // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n\n      template.innerHTML = TEMPLATE;\n\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\n\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\n      this.face = face;\n\n      canvas.appendChild(image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, NAMESPACE + '-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: 'uncreate',\n    value: function uncreate() {\n      var element = this.element;\n\n\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.abort();\n      } else if (this.isImg) {\n        if (element.complete) {\n          clearTimeout(this.timeout);\n        } else {\n          removeListener(element, EVENT_LOAD, this.onStart);\n        }\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.esm.js\n// module id = 5SB6\n// module chunks = 2","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = BEQ0\n// module chunks = 2","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueCropper from 'vue-cropperjs'\nimport Tesseract from 'tesseract.js'\nimport axios from 'axios'\n\nexport default {\n    name: 'test',\n    data () {\n        return {\n            imgSrc: '',\n            cropImg: '',\n            arr: [\n                {\n                    id: 1,\n                    name: 'a'\n                },\n                {\n                    id: 2,\n                    name: 'b'\n                },\n                {\n                    id: 3,\n                    name: 'c'\n                }\n            ]\n        }\n    },\n    created () {\n        document.onkeydown = function (e) {\n            console.log(e)\n        }\n    },\n    mounted () {\n    },\n    methods: {\n        alert (arg) {\n            alert(arg.name)\n        },\n         setImage (e) {\n            const file = e.files[0];\n\n            if (!file.type.includes('image/')) {\n                alert('Please select an image file');\n                return;\n            }\n\n            if (typeof FileReader === 'function') {\n                const reader = new FileReader();\n\n                reader.onload = (event) => {\n                    this.imgSrc = event.target.result;\n                    // rebuild cropperjs with the updated source\n                    this.$refs.cropper.replace(event.target.result);\n                    this.$refs.cropper.$el.style = 'display: block'\n                };\n\n                reader.readAsDataURL(file);\n            } else {\n                alert('Sorry, FileReader API not supported');\n            }\n        },\n        cropImage () {\n            console.log('crop image...')\n            // get image data for post processing, e.g. upload or setting image src\n            this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n            this.$refs.cropImg.style = 'display: block;width: 200px; height: 150px; border: 1px solid gray;'\n            \n        },\n        recognize () {\n            console.log('reco....')\n            Tesseract.recognize(this.$refs.cropImg, {\n                lang: 'eng',\n                tessedit_char_whitelist: '0123456789.',\n                tessedit_char_blacklist: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n                tessedit_dump_choices: '0123456789.'\n            })\n            .then(function(result){\n                console.log(result)\n            })\n        },\n        uploadImage () {\n            this.setImage(document.getElementById(\"file-input\"));\n        },\n        trigger () {\n            document.getElementById('file-input').click();\n        },\n        readURL (input) {\n            if (input.files && input.files[0]) {\n                const reader = new FileReader();\n\n                reader.onload = function (e) {\n                    document.getElementById('blah').src = e.target.result;\n                    document.getElementById('blah').style = 'display: block;';\n                    \n                }\n\n                reader.readAsDataURL(input.files[0]);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/test.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._l((_vm.arr),function(a,index){return _c('div',{key:index,staticStyle:{\"width\":\"200px\",\"height\":\"200px\",\"background-color\":\"red\",\"display\":\"inline-flex\"},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"right\",39,$event.key,[\"Right\",\"ArrowRight\"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }_vm.alert(a)}}},[_vm._v(\"\\n            \"+_vm._s(a.name)+\"\\n        \")])}),_vm._v(\" \"),_vm._m(0),_vm._m(1)],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_0.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_1.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_2.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_3.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_4.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_5.jpg\"}}),_c('img',{staticClass:\"img\",attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/mh/cartoon3_6.jpg\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('img',{attrs:{\"src\":\"https://huiai.sleepeazz.com/qares/images/footer.jpg\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-02c18a90\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/test.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-02c18a90\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vux-loader/src/style-loader.js!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./test.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vux-loader/src/script-loader.js!../../node_modules/vux-loader/src/script-loader.js!../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vux-loader/src/script-loader.js!../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-02c18a90\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../node_modules/vux-loader/src/template-loader.js!../../node_modules/vue-loader/lib/selector?type=template&index=0!./test.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-02c18a90\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/test.vue\n// module id = null\n// module chunks = ","module.exports = {\"_from\":\"tesseract.js\",\"_id\":\"tesseract.js@1.0.10\",\"_inBundle\":false,\"_integrity\":\"sha1-4RqWrnYUeTnZIY+I4of7aUFLHl0=\",\"_location\":\"/tesseract.js\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"tag\",\"registry\":true,\"raw\":\"tesseract.js\",\"name\":\"tesseract.js\",\"escapedName\":\"tesseract.js\",\"rawSpec\":\"\",\"saveSpec\":null,\"fetchSpec\":\"latest\"},\"_requiredBy\":[\"#USER\",\"/\"],\"_resolved\":\"https://registry.npmjs.org/tesseract.js/-/tesseract.js-1.0.10.tgz\",\"_shasum\":\"e11a96ae76147939d9218f88e287fb69414b1e5d\",\"_spec\":\"tesseract.js\",\"_where\":\"/Users/rico/GitHub/Healthcare-H5\",\"author\":\"\",\"browser\":{\"./src/node/index.js\":\"./src/browser/index.js\"},\"bugs\":{\"url\":\"https://github.com/naptha/tesseract.js/issues\"},\"bundleDependencies\":false,\"dependencies\":{\"file-type\":\"^3.8.0\",\"is-url\":\"^1.2.2\",\"jpeg-js\":\"^0.2.0\",\"level-js\":\"^2.2.4\",\"node-fetch\":\"^1.6.3\",\"object-assign\":\"^4.1.0\",\"png.js\":\"^0.2.1\",\"tesseract.js-core\":\"^1.0.2\"},\"deprecated\":false,\"description\":\"Pure Javascript Multilingual OCR\",\"devDependencies\":{\"babel-preset-es2015\":\"^6.16.0\",\"babelify\":\"^7.3.0\",\"browserify\":\"^13.1.0\",\"envify\":\"^3.4.1\",\"http-server\":\"^0.9.0\",\"pako\":\"^1.0.3\",\"watchify\":\"^3.7.0\"},\"homepage\":\"https://github.com/naptha/tesseract.js\",\"license\":\"Apache-2.0\",\"main\":\"src/index.js\",\"name\":\"tesseract.js\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/naptha/tesseract.js.git\"},\"scripts\":{\"build\":\"browserify src/index.js -t [ babelify --presets [ es2015 ] ] -o dist/tesseract.js --standalone Tesseract && browserify src/browser/worker.js -t [ babelify --presets [ es2015 ] ] -o dist/worker.js\",\"release\":\"npm run build && git commit -am 'new release' && git push && git tag `jq -r '.version' package.json` && git push origin --tags && npm publish\",\"start\":\"watchify src/index.js  -t [ envify --NODE_ENV development ] -t [ babelify --presets [ es2015 ] ] -o dist/tesseract.dev.js --standalone Tesseract & watchify src/browser/worker.js  -t [ envify --NODE_ENV development ] -t [ babelify --presets [ es2015 ] ] -o dist/worker.dev.js & http-server -p 7355\",\"test\":\"echo \\\"Error: no test specified\\\" & exit 1\"},\"version\":\"1.0.10\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tesseract.js/package.json\n// module id = YMlw\n// module chunks = 2","const adapter = require('./node/index.js')\nconst circularize = require('./common/circularize.js')\nconst TesseractJob = require('./common/job');\nconst objectAssign = require('object-assign');\nconst version = require('../package.json').version;\n\nfunction create(workerOptions){\n\tworkerOptions = workerOptions || {};\n\tvar worker = new TesseractWorker(objectAssign({}, adapter.defaultOptions, workerOptions))\n\tworker.create = create;\n\tworker.version = version;\n\treturn worker;\n}\n\nclass TesseractWorker {\n\tconstructor(workerOptions){\n\t\tthis.worker = null;\n\t\tthis.workerOptions = workerOptions;\n\t\tthis._currentJob = null;\n\t\tthis._queue = []\n\t}\n\n\trecognize(image, options){\n\t\treturn this._delay(job => {\n\t\t\tif(typeof options === 'string'){\n\t\t\t\toptions = { lang: options };\n\t\t\t}else{\n\t\t\t\toptions = options || {}\n\t\t\t\toptions.lang = options.lang || 'eng';\t\n\t\t\t}\n\t\t\t\n\t\t\tjob._send('recognize', { image: image, options: options, workerOptions: this.workerOptions })\n\t\t})\n\t}\n\tdetect(image, options){\n\t\toptions = options || {}\n\t\treturn this._delay(job => {\n\t\t\tjob._send('detect', { image: image, options: options, workerOptions: this.workerOptions })\n\t\t})\n\t}\n\n\tterminate(){ \n\t\tif(this.worker) adapter.terminateWorker(this);\n\t\tthis.worker = null;\n\t}\n\n\t_delay(fn){\n\t\tif(!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n\n\t\tvar job = new TesseractJob(this);\n\t\tthis._queue.push(e => {\n\t\t\tthis._queue.shift()\n\t\t\tthis._currentJob = job;\n\t\t\tfn(job)\n\t\t})\n\t\tif(!this._currentJob) this._dequeue();\n\t\treturn job\n\t}\n\n\t_dequeue(){\n\t\tthis._currentJob = null;\n\t\tif(this._queue.length > 0){\n\t\t\tthis._queue[0]()\n\t\t}\n\t}\n\n\t_recv(packet){\n\n        if(packet.status === 'resolve' && packet.action === 'recognize'){\n            packet.data = circularize(packet.data);\n        }\n\n\t\tif(this._currentJob.id === packet.jobId){\n\t\t\tthis._currentJob._handle(packet)\n\t\t}else{\n\t\t\tconsole.warn('Job ID ' + packet.jobId + ' not known.')\n\t\t}\n\t}\n}\n\nvar DefaultTesseract = create()\n\nmodule.exports = DefaultTesseract\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tesseract.js/src/index.js\n// module id = dAcW\n// module chunks = 2","// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \n\nmodule.exports = function circularize(page){\n    page.paragraphs = []\n    page.lines = []\n    page.words = []\n    page.symbols = []\n\n    page.blocks.forEach(function(block){\n        block.page = page;\n\n        block.lines = []\n        block.words = []\n        block.symbols = []\n\n        block.paragraphs.forEach(function(para){\n            para.block = block;\n            para.page = page;\n\n            para.words = []\n            para.symbols = []\n            \n            para.lines.forEach(function(line){\n                line.paragraph = para;\n                line.block = block;\n                line.page = page;\n\n                line.symbols = []\n\n                line.words.forEach(function(word){\n                    word.line = line;\n                    word.paragraph = para;\n                    word.block = block;\n                    word.page = page;\n                    word.symbols.forEach(function(sym){\n                        sym.word = word;\n                        sym.line = line;\n                        sym.paragraph = para;\n                        sym.block = block;\n                        sym.page = page;\n                        \n                        sym.line.symbols.push(sym)\n                        sym.paragraph.symbols.push(sym)\n                        sym.block.symbols.push(sym)\n                        sym.page.symbols.push(sym)\n                    })\n                    word.paragraph.words.push(word)\n                    word.block.words.push(word)\n                    word.page.words.push(word)\n                })\n                line.block.lines.push(line)\n                line.page.lines.push(line)\n            })\n            para.page.paragraphs.push(para)\n        })\n    })\n    return page\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tesseract.js/src/common/circularize.js\n// module id = i8m9\n// module chunks = 2","var defaultOptions = {\n    // workerPath: 'https://cdn.rawgit.com/naptha/tesseract.js/0.2.0/dist/worker.js',\n    corePath: 'https://cdn.rawgit.com/naptha/tesseract.js-core/0.1.0/index.js',    \n    langPath: 'https://cdn.rawgit.com/naptha/tessdata/gh-pages/3.02/',\n}\n\nif (process.env.NODE_ENV === \"development\") {\n    console.debug('Using Development Configuration')\n    defaultOptions.workerPath = location.protocol + '//' + location.host + '/dist/worker.dev.js?nocache=' + Math.random().toString(36).slice(3)\n}else{\n    var version = require('../../package.json').version;\n    defaultOptions.workerPath = 'https://cdn.rawgit.com/naptha/tesseract.js/' + version + '/dist/worker.js'\n}\n\nexports.defaultOptions = defaultOptions;\n\n\nexports.spawnWorker = function spawnWorker(instance, workerOptions){\n    if(window.Blob && window.URL){\n        var blob = new Blob(['importScripts(\"' + workerOptions.workerPath + '\");'])\n        var worker = new Worker(window.URL.createObjectURL(blob));\n    }else{\n        var worker = new Worker(workerOptions.workerPath)\n    }\n\n    worker.onmessage = function(e){\n        var packet = e.data;\n        instance._recv(packet)\n    }\n    return worker\n}\n\nexports.terminateWorker = function(instance){\n    instance.worker.terminate()\n}\n\nexports.sendPacket = function sendPacket(instance, packet){\n    loadImage(packet.payload.image, function(img){\n        packet.payload.image = img\n        instance.worker.postMessage(packet) \n    })\n}\n\n\nfunction loadImage(image, cb){\n    if(typeof image === 'string'){\n        if(/^\\#/.test(image)){\n            // element css selector\n            return loadImage(document.querySelector(image), cb)\n        }else if(/(blob|data)\\:/.test(image)){\n            // data url\n            var im = new Image\n            im.src = image;\n            im.onload = e => loadImage(im, cb);\n            return\n        }else{\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', image, true)\n            xhr.responseType = \"blob\";\n            xhr.onload = e => loadImage(xhr.response, cb);\n            xhr.onerror = function(e){\n                if(/^https?:\\/\\//.test(image) && !/^https:\\/\\/crossorigin.me/.test(image)){\n                    console.debug('Attempting to load image with CORS proxy')\n                    loadImage('https://crossorigin.me/' + image, cb)\n                }\n            }\n            xhr.send(null)\n            return\n        }\n    }else if(image instanceof File){\n        // files\n        var fr = new FileReader()\n        fr.onload = e => loadImage(fr.result, cb);\n        fr.readAsDataURL(image)\n        return\n    }else if(image instanceof Blob){\n        return loadImage(URL.createObjectURL(image), cb)\n    }else if(image.getContext){\n        // canvas element\n        return loadImage(image.getContext('2d'), cb)\n    }else if(image.tagName == \"IMG\" || image.tagName == \"VIDEO\"){\n        // image element or video element\n        var c = document.createElement('canvas');\n        c.width  = image.naturalWidth  || image.videoWidth;\n        c.height = image.naturalHeight || image.videoHeight;\n        var ctx = c.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n        return loadImage(ctx, cb)\n    }else if(image.getImageData){\n        // canvas context\n        var data = image.getImageData(0, 0, image.canvas.width, image.canvas.height);\n        return loadImage(data, cb)\n    }else{\n        return cb(image)\n    }\n    throw new Error('Missing return in loadImage cascade')\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tesseract.js/src/browser/index.js\n// module id = nrRX\n// module chunks = 2","const adapter = require('../node/index.js')\n\nlet jobCounter = 0;\n\nmodule.exports = class TesseractJob {\n    constructor(instance){\n        this.id = 'Job-' + (++jobCounter) + '-' + Math.random().toString(16).slice(3, 8)\n\n        this._instance = instance;\n        this._resolve = []\n        this._reject = []\n        this._progress = []\n        this._finally = []\n    }\n\n    then(resolve, reject){\n        if(this._resolve.push){\n            this._resolve.push(resolve) \n        }else{\n            resolve(this._resolve)\n        }\n\n        if(reject) this.catch(reject);\n        return this;\n    }\n    catch(reject){\n        if(this._reject.push){\n            this._reject.push(reject) \n        }else{\n            reject(this._reject)\n        }\n        return this;\n    }\n    progress(fn){\n        this._progress.push(fn)\n        return this;\n    }\n    finally(fn) {\n        this._finally.push(fn)\n        return this;  \n    }\n    _send(action, payload){\n        adapter.sendPacket(this._instance, {\n            jobId: this.id,\n            action: action,\n            payload: payload\n        })\n    }\n\n    _handle(packet){\n        var data = packet.data;\n        let runFinallyCbs = false;\n\n        if(packet.status === 'resolve'){\n            if(this._resolve.length === 0) console.log(data);\n            this._resolve.forEach(fn => {\n                var ret = fn(data);\n                if(ret && typeof ret.then == 'function'){\n                    console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.')\n                }\n            })\n            this._resolve = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'reject'){\n            if(this._reject.length === 0) console.error(data);\n            this._reject.forEach(fn => fn(data))\n            this._reject = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'progress'){\n            this._progress.forEach(fn => fn(data))\n        }else{\n            console.warn('Message type unknown', packet.status)\n        }\n\n        if (runFinallyCbs) {\n            this._finally.forEach(fn => fn(data));\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tesseract.js/src/common/job.js\n// module id = qSGD\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nrequire('cropperjs/dist/cropper.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar CropperComponent = _vue2.default.extend({\n    render: function render(h) {\n        return h('div', { style: this.containerStyle }, [h('img', {\n            ref: 'img',\n            attrs: {\n                src: this.src,\n                alt: this.alt || 'image',\n                style: 'max-width: 100%'\n            },\n            style: this.imgStyle\n        })]);\n    },\n\n    props: {\n        'containerStyle': Object,\n        'src': {\n            type: String,\n            default: ''\n        },\n        'alt': String,\n        'imgStyle': Object,\n\n        'viewMode': Number,\n        'dragMode': String,\n        'aspectRatio': Number,\n        'data': Object,\n        'preview': String,\n        'responsive': {\n            type: Boolean,\n            default: true\n        },\n        'restore': {\n            type: Boolean,\n            default: true\n        },\n        'checkCrossOrigin': {\n            type: Boolean,\n            default: true\n        },\n        'checkOrientation': {\n            type: Boolean,\n            default: true\n        },\n        'modal': {\n            type: Boolean,\n            default: true\n        },\n        'guides': {\n            type: Boolean,\n            default: true\n        },\n        'center': {\n            type: Boolean,\n            default: true\n        },\n        'highlight': {\n            type: Boolean,\n            default: true\n        },\n        'background': {\n            type: Boolean,\n            default: true\n        },\n        'autoCrop': {\n            type: Boolean,\n            default: true\n        },\n        'autoCropArea': Number,\n        'movable': {\n            type: Boolean,\n            default: true\n        },\n        'rotatable': {\n            type: Boolean,\n            default: true\n        },\n        'scalable': {\n            type: Boolean,\n            default: true\n        },\n        'zoomable': {\n            type: Boolean,\n            default: true\n        },\n        'zoomOnTouch': {\n            type: Boolean,\n            default: true\n        },\n        'zoomOnWheel': {\n            type: Boolean,\n            default: true\n        },\n        'wheelZoomRatio': Number,\n        'cropBoxMovable': {\n            type: Boolean,\n            default: true\n        },\n        'cropBoxResizable': {\n            type: Boolean,\n            default: true\n        },\n        'toggleDragModeOnDblclick': {\n            type: Boolean,\n            default: true\n        },\n\n        'minCanvasWidth': Number,\n        'minCanvasHeight': Number,\n        'minCropBoxWidth': Number,\n        'minCropBoxHeight': Number,\n        'minContainerWidth': Number,\n        'minContainerHeight': Number,\n\n        'ready': Function,\n        'cropstart': Function,\n        'cropmove': Function,\n        'cropend': Function,\n        'crop': Function,\n        'zoom': Function\n    },\n    mounted: function mounted() {\n        var _$options$props = this.$options.props,\n            containerStyle = _$options$props.containerStyle,\n            src = _$options$props.src,\n            alt = _$options$props.alt,\n            imgStyle = _$options$props.imgStyle,\n            data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n        var props = {};\n\n        for (var key in data) {\n            if (this[key] !== undefined) {\n                props[key] = this[key];\n            }\n        }\n\n        this.cropper = new _cropperjs2.default(this.$refs.img, props);\n    },\n\n    methods: {\n        reset: function reset() {\n            return this.cropper.reset();\n        },\n        clear: function clear() {\n            return this.cropper.clear();\n        },\n        replace: function replace(url) {\n            var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            return this.cropper.replace(url, onlyColorChanged);\n        },\n        enable: function enable() {\n            return this.cropper.enable();\n        },\n        disable: function disable() {\n            return this.cropper.disable();\n        },\n        destroy: function destroy() {\n            return this.cropper.destroy();\n        },\n        move: function move(offsetX, offsetY) {\n            return this.cropper.move(offsetX, offsetY);\n        },\n        moveTo: function moveTo(x) {\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n            return this.cropper.moveTo(x, y);\n        },\n        relativeZoom: function relativeZoom(ratio, _originalEvent) {\n            return this.cropper.zoom(ratio, _originalEvent);\n        },\n        zoomTo: function zoomTo(ratio, _originalEvent) {\n            return this.cropper.zoomTo(ratio, _originalEvent);\n        },\n        rotate: function rotate(degree) {\n            return this.cropper.rotate(degree);\n        },\n        rotateTo: function rotateTo(degree) {\n            return this.cropper.rotateTo(degree);\n        },\n        scaleX: function scaleX(_scaleX) {\n            return this.cropper.scaleX(_scaleX);\n        },\n        scaleY: function scaleY(_scaleY) {\n            return this.cropper.scaleY(_scaleY);\n        },\n        scale: function scale(scaleX) {\n            var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n            return this.cropper.scale(scaleX, scaleY);\n        },\n        getData: function getData() {\n            var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return this.cropper.getData(rounded);\n        },\n        setData: function setData(data) {\n            return this.cropper.setData(data);\n        },\n        getContainerData: function getContainerData() {\n            return this.cropper.getContainerData();\n        },\n        getImageData: function getImageData() {\n            return this.cropper.getImageData();\n        },\n        getCanvasData: function getCanvasData() {\n            return this.cropper.getCanvasData();\n        },\n        setCanvasData: function setCanvasData(data) {\n            return this.cropper.setCanvasData(data);\n        },\n        getCropBoxData: function getCropBoxData() {\n            return this.cropper.getCropBoxData();\n        },\n        setCropBoxData: function setCropBoxData(data) {\n            return this.cropper.setCropBoxData(data);\n        },\n        getCroppedCanvas: function getCroppedCanvas() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            return this.cropper.getCroppedCanvas(options);\n        },\n        setAspectRatio: function setAspectRatio(aspectRatio) {\n            return this.cropper.setAspectRatio(aspectRatio);\n        },\n        setDragMode: function setDragMode(mode) {\n            return this.cropper.setDragMode(mode);\n        }\n    }\n});\n\nvar VueCropper = _vue2.default.component('vue-cropper', CropperComponent);\n\nexports.default = VueCropper;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-cropperjs/dist/VueCropper.js\n// module id = sRoY\n// module chunks = 2"],"sourceRoot":""}